@page "/calendar"
<h3>Calendar</h3>

<AntDesign.Calendar DateCellRender="DateCellRender" MonthCellRender="MonthCellRender" />

@code
{
    class ListData
    {
        public string Content;
        public int CalendarEntryId;
        public DateTime StartDate;
    }

    private List<ListData> GetListDataTest(DateTime value)
    {
        List<ListData> listData = null;

        switch (value.Day)
        {
            case 8:
                listData = new List<ListData>
                {
                    new ListData { StartDate = value.AddHours(1), CalendarEntryId = 1, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(2), CalendarEntryId = 2, Content = "This is usual event." },
                };
                break;
            case 10:
                listData = new List<ListData> {
                    new ListData { StartDate = value.AddHours(1), CalendarEntryId = 3, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(2), CalendarEntryId = 4, Content = "This is usual event." },
                    new ListData { StartDate = value.AddHours(3), CalendarEntryId = 5, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(4), CalendarEntryId = 6, Content = "This is usual event." },
                };
                break;
            case 15:
                listData = new List<ListData> {
                    new ListData { StartDate = value.AddHours(1), CalendarEntryId = 7, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(2), CalendarEntryId = 8, Content = "This is usual event." },
                    new ListData { StartDate = value.AddHours(3), CalendarEntryId = 9, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(4), CalendarEntryId = 10, Content = "This is usual event." },
                    new ListData { StartDate = value.AddHours(5), CalendarEntryId = 11, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(6), CalendarEntryId = 12, Content = "This is usual event." },
                    new ListData { StartDate = value.AddHours(7), CalendarEntryId = 13, Content = "This is warning event." },
                    new ListData { StartDate = value.AddHours(8), CalendarEntryId = 14, Content = "This is usual event." },
                };
                break;
        }

        return listData ?? new List<ListData>();
    }

    private RenderFragment DateCellRender(DateTime value)
    {
        var listData = GetListDataTest(value);
        return
    @<Template>
        <ul class="events">
            @foreach (var data in listData)
                {
                    <li key="@data.CalendarEntryId">
                        <div @onclick="@(() => {OnEventClick(data.CalendarEntryId);})"> @data.StartDate.Hour : @data.StartDate.Minute - @data.Content </div>
                    </li>
                }
            </ul>
        </Template>;
    }

    private void OnEventClick(int id)
    {
        Console.WriteLine(id);
    }

    private int? GetMonthData(DateTime value)
    {
        if (value.Month == 8)
        {
            return 1394;
        }

        return null;
    }

    private RenderFragment MonthCellRender(DateTime value)
    {
        int? num = GetMonthData(value);

        if (num == null)
        {
            return null;
        }

        return
    @<Template>
        <div className="notes-month">
            <section>@num</section>
            <span>Backlog number</span>
        </div>
    </Template>;
    }
}

<Style>
    .events {
        list-style: none;
        margin: 0;
        padding: 0;
    }

        .events .ant-badge-status {
            overflow: hidden;
            white-space: nowrap;
            width: 100%;
            text-overflow: ellipsis;
            font-size: 12px;
        }

    .notes-month {
        text-align: center;
        font-size: 28px;
    }

        .notes-month section {
            font-size: 28px;
        }
</Style>